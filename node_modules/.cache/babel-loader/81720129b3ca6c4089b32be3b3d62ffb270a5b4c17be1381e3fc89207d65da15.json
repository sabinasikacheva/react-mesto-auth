{"ast":null,"code":"import _classCallCheck from\"/Users/sabina/mesto-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/sabina/mesto-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";var Api=/*#__PURE__*/function(){function Api(basePath,token){_classCallCheck(this,Api);this._basePath=basePath;this._token=token;}_createClass(Api,[{key:\"_getHeaders\",value:function _getHeaders(){return{\"Content-Type\":\"application/json\",authorization:this._token};}},{key:\"_getJson\",value:function _getJson(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}},{key:\"getInitialCards\",value:function getInitialCards(){return fetch(\"\".concat(this._basePath,\"/cards\"),{headers:this._getHeaders()}).then(this._getJson);}},{key:\"createCard\",value:function createCard(item){return fetch(\"\".concat(this._basePath,\"/cards\"),{method:\"POST\",headers:this._getHeaders(),body:JSON.stringify(item)}).then(this._getJson);}},{key:\"deleteCard\",value:function deleteCard(id){return fetch(\"\".concat(this._basePath,\"/cards/\").concat(id),{method:\"DELETE\",headers:this._getHeaders()}).then(this._getJson);}},{key:\"setLike\",value:function setLike(id){return fetch(\"\".concat(this._basePath,\"/cards/\").concat(id,\"/likes\"),{method:'PUT',headers:this._getHeaders()}).then(this._getJson);}},{key:\"deleteLike\",value:function deleteLike(id){return fetch(\"\".concat(this._basePath,\"/cards/\").concat(id,\"/likes\"),{method:'DELETE',headers:this._getHeaders()}).then(this._getJson);}},{key:\"getCurrentUser\",value:function getCurrentUser(){return fetch(\"\".concat(this._basePath,\"/users/me\"),{headers:this._getHeaders()}).then(this._getJson);}},{key:\"setUserInfo\",value:function setUserInfo(item){return fetch(\"\".concat(this._basePath,\"/users/me\"),{method:\"PATCH\",headers:this._getHeaders(),body:JSON.stringify({name:item.name,about:item.about})}).then(this._getJson);}},{key:\"changeUserAvatar\",value:function changeUserAvatar(data){return fetch(\"\".concat(this._basePath,\"/users/me/avatar\"),{method:\"PATCH\",headers:this._getHeaders(),body:JSON.stringify(data)}).then(this._getJson);}}]);return Api;}();var api=new Api('https://mesto.nomoreparties.co/v1/cohort-61','fc848517-94b6-406d-9164-cc065e2b75b4');export default api;","map":{"version":3,"names":["Api","basePath","token","_classCallCheck","_basePath","_token","_createClass","key","value","_getHeaders","authorization","_getJson","res","ok","json","Promise","reject","concat","status","getInitialCards","fetch","headers","then","createCard","item","method","body","JSON","stringify","deleteCard","id","setLike","deleteLike","getCurrentUser","setUserInfo","name","about","changeUserAvatar","data","api"],"sources":["/Users/sabina/mesto-react/src/utils/Api.js"],"sourcesContent":["class Api {\n    constructor(basePath, token) {\n        this._basePath = basePath;\n        this._token = token;\n    }\n\n    _getHeaders() {\n        return {\n            \"Content-Type\": \"application/json\",\n            authorization: this._token,\n        };\n    }\n\n    _getJson(res) {\n        if (res.ok) {\n            return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n    }\n\n    getInitialCards() {\n        return fetch(`${this._basePath}/cards`, {\n            headers: this._getHeaders(),\n        })\n          .then(this._getJson);\n    }\n\n    createCard(item) {\n        return fetch(`${this._basePath}/cards`, {\n            method: \"POST\",\n            headers: this._getHeaders(),\n            body: JSON.stringify(item),\n        })\n          .then(this._getJson);\n    }\n\n    deleteCard(id) {\n        return fetch(`${this._basePath}/cards/${id}`, {\n            method: \"DELETE\",\n            headers: this._getHeaders(),\n        })\n          .then(this._getJson);\n    }\n\n    setLike(id) {\n        return fetch(`${this._basePath}/cards/${id}/likes`, {\n            method: 'PUT',\n            headers: this._getHeaders(),\n        })\n          .then(this._getJson);\n    }\n\n    deleteLike(id) {\n        return fetch(`${this._basePath}/cards/${id}/likes`, {\n            method: 'DELETE',\n            headers: this._getHeaders(),\n        })\n          .then(this._getJson);\n    }\n\n    getCurrentUser() {\n        return fetch(`${this._basePath}/users/me`, {\n            headers: this._getHeaders(),\n        })\n          .then(this._getJson);\n    }\n\n    setUserInfo(item) {\n        return fetch(`${this._basePath}/users/me`, {\n            method: \"PATCH\",\n            headers: this._getHeaders(),\n            body: JSON.stringify({\n                name: item.name,\n                about: item.about\n            })\n        })\n          .then(this._getJson);\n    }\n\n    changeUserAvatar(data) {\n        return fetch(`${this._basePath}/users/me/avatar`, {\n            method: \"PATCH\",\n            headers: this._getHeaders(),\n            body: JSON.stringify(data),\n        })\n          .then(this._getJson);\n    }\n}\n\nconst api = new Api(\n    'https://mesto.nomoreparties.co/v1/cohort-61',\n    'fc848517-94b6-406d-9164-cc065e2b75b4'); \n\nexport default api;    \n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
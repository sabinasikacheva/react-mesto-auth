{"ast":null,"code":"var BASE_URL='https://auth.nomoreparties.co';var headers={'Content-Type':'application/json'};var getJson=function getJson(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));};var request=function request(url,options){return fetch(\"\".concat(BASE_URL).concat(url),options).then(getJson);};export var register=function register(password,email){return request('/signup',{method:'POST',headers:headers,body:JSON.stringify({password:password,email:email})});};export var login=function login(password,email){return request('/signin',{method:'POST',headers:headers,body:JSON.stringify({password:password,email:email})});};export var checkToken=function checkToken(token){return request('/users/me',{method:'GET',headers:{headers:headers,\"Authorization\":\"Bearer \".concat(token)}});};","map":{"version":3,"names":["BASE_URL","headers","getJson","res","ok","json","Promise","reject","concat","status","request","url","options","fetch","then","register","password","email","method","body","JSON","stringify","login","checkToken","token"],"sources":["/Users/admin/Documents/Sabina/react-mesto-auth/src/utils/AuthApi.js"],"sourcesContent":["const BASE_URL = 'https://auth.nomoreparties.co';\nconst headers = {\n  'Content-Type': 'application/json'\n}\n\n  const getJson = (res) =>  {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`)\n  }\n\n  const request = (url, options) => {\n    return fetch(`${BASE_URL}${url}`, options).then(getJson)\n  }\n\n  export const register = (password, email) => {\n    return request('/signup', {\n      method: 'POST',\n      headers: headers,\n      body: JSON.stringify({\n        password,\n        email\n      })\n    })\n  };\n\n  export const login = (password, email) => {\n    return request('/signin', {\n      method: 'POST',\n      headers: headers,\n      body: JSON.stringify({\n        password,\n        email\n      })\n    })\n  };\n\n  export const checkToken = (token) => {\n    return request('/users/me', {\n      method: 'GET',\n      headers: {\n        headers,\n        \"Authorization\" : `Bearer ${token}`\n      }\n    })\n  }"],"mappings":"AAAA,GAAM,CAAAA,QAAQ,CAAG,+BAA+B,CAChD,GAAM,CAAAC,OAAO,CAAG,CACd,cAAc,CAAE,kBAClB,CAAC,CAEC,GAAM,CAAAC,OAAO,CAAG,QAAV,CAAAA,OAAOA,CAAIC,GAAG,CAAM,CACxB,GAAIA,GAAG,CAACC,EAAE,CAAE,CACV,MAAO,CAAAD,GAAG,CAACE,IAAI,EAAE,CACnB,CACA,MAAO,CAAAC,OAAO,CAACC,MAAM,0CAAAC,MAAA,CAAYL,GAAG,CAACM,MAAM,EAAG,CAChD,CAAC,CAED,GAAM,CAAAC,OAAO,CAAG,QAAV,CAAAA,OAAOA,CAAIC,GAAG,CAAEC,OAAO,CAAK,CAChC,MAAO,CAAAC,KAAK,IAAAL,MAAA,CAAIR,QAAQ,EAAAQ,MAAA,CAAGG,GAAG,EAAIC,OAAO,CAAC,CAACE,IAAI,CAACZ,OAAO,CAAC,CAC1D,CAAC,CAED,MAAO,IAAM,CAAAa,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAIC,QAAQ,CAAEC,KAAK,CAAK,CAC3C,MAAO,CAAAP,OAAO,CAAC,SAAS,CAAE,CACxBQ,MAAM,CAAE,MAAM,CACdjB,OAAO,CAAEA,OAAO,CAChBkB,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACnBL,QAAQ,CAARA,QAAQ,CACRC,KAAK,CAALA,KACF,CAAC,CACH,CAAC,CAAC,CACJ,CAAC,CAED,MAAO,IAAM,CAAAK,KAAK,CAAG,QAAR,CAAAA,KAAKA,CAAIN,QAAQ,CAAEC,KAAK,CAAK,CACxC,MAAO,CAAAP,OAAO,CAAC,SAAS,CAAE,CACxBQ,MAAM,CAAE,MAAM,CACdjB,OAAO,CAAEA,OAAO,CAChBkB,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACnBL,QAAQ,CAARA,QAAQ,CACRC,KAAK,CAALA,KACF,CAAC,CACH,CAAC,CAAC,CACJ,CAAC,CAED,MAAO,IAAM,CAAAM,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAIC,KAAK,CAAK,CACnC,MAAO,CAAAd,OAAO,CAAC,WAAW,CAAE,CAC1BQ,MAAM,CAAE,KAAK,CACbjB,OAAO,CAAE,CACPA,OAAO,CAAPA,OAAO,CACP,eAAe,WAAAO,MAAA,CAAagB,KAAK,CACnC,CACF,CAAC,CAAC,CACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
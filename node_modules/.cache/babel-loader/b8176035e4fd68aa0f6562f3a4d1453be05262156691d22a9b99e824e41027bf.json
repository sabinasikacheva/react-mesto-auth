{"ast":null,"code":"class AuthApi {\n  constructor(baseUrl) {\n    this._baseUrl = baseUrl;\n  }\n  // проверяет есть ли ошибка\n  _checkError(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Статус ошибки: ${res.status}`);\n  }\n  // регистрация пользователя\n  registerUser(email, password) {\n    return fetch(`${this._baseUrl}/signup`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(res => this._checkError(res));\n  }\n\n  // вход пользователя\n  loginUser(email, password) {\n    return fetch(`${this._baseUrl}/signin`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(res => this._checkError(res));\n  }\n\n  // проверяем токен\n  checkToken(token) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => this._checkError(res));\n  }\n}\nconst authApi = new AuthApi(\"https://auth.nomoreparties.co\");\nexport default authApi;\n\n// const BASE_URL = \"https://auth.nomoreparties.co\"\n\n// function checkResponse(res) {\n//   if (res.ok) {\n//     return res.json()\n//   }\n//   return Promise.reject(`${res.status}`)\n// }\n\n// export const register = (email, password) => {\n//   return fetch(`${BASE_URL}/signup`, {\n//     method: \"POST\",\n//     headers: {\n//       Accept: \"application/json\",\n//       \"Content-Type\": \"application/json\",\n//     },\n//     body: JSON.stringify({\n//       email: email,\n//       password: password,\n//     }),\n//   }).then(checkResponse)\n// }\n\n// export const login = (email, password) => {\n//   return fetch(`${BASE_URL}/signin`, {\n//     method: \"POST\",\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//     },\n//     body: JSON.stringify({\n//       email: email,\n//       password: password,\n//     }),\n//   })\n//     .then(checkResponse)\n//     .then((data) => {\n//       if (data.token) {\n//         localStorage.setItem(\"jwt\", data.token)\n//         return data\n//       }\n//     })\n// }\n\n// export const checkToken = (jwt) => {\n//   return fetch(`${BASE_URL}/users/me`, {\n//     method: \"GET\",\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//       Authorization: `Bearer ${jwt}`,\n//     },\n//   }).then(checkResponse)\n// }","map":{"version":3,"names":["AuthApi","constructor","baseUrl","_baseUrl","_checkError","res","ok","json","Promise","reject","status","registerUser","email","password","fetch","method","headers","body","JSON","stringify","then","loginUser","checkToken","token","Authorization","authApi"],"sources":["/Users/admin/Documents/Sabina/react-mesto-auth/src/utils/AuthApi.js"],"sourcesContent":["class AuthApi {\n  constructor(baseUrl) {\n    this._baseUrl = baseUrl;\n  }\n  // проверяет есть ли ошибка\n  _checkError(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Статус ошибки: ${res.status}`);\n  }\n  // регистрация пользователя\n  registerUser(email, password) {\n    return fetch(`${this._baseUrl}/signup`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password }),\n    }).then((res) => this._checkError(res));\n  }\n\n  // вход пользователя\n  loginUser(email, password) {\n    return fetch(`${this._baseUrl}/signin`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password }),\n    }).then((res) => this._checkError(res));\n  }\n\n  // проверяем токен\n  checkToken(token) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    }).then((res) => this._checkError(res));\n  }\n}\nconst authApi = new AuthApi(\"https://auth.nomoreparties.co\");\nexport default authApi;\n\n\n\n// const BASE_URL = \"https://auth.nomoreparties.co\"\n\n// function checkResponse(res) {\n//   if (res.ok) {\n//     return res.json()\n//   }\n//   return Promise.reject(`${res.status}`)\n// }\n\n// export const register = (email, password) => {\n//   return fetch(`${BASE_URL}/signup`, {\n//     method: \"POST\",\n//     headers: {\n//       Accept: \"application/json\",\n//       \"Content-Type\": \"application/json\",\n//     },\n//     body: JSON.stringify({\n//       email: email,\n//       password: password,\n//     }),\n//   }).then(checkResponse)\n// }\n\n// export const login = (email, password) => {\n//   return fetch(`${BASE_URL}/signin`, {\n//     method: \"POST\",\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//     },\n//     body: JSON.stringify({\n//       email: email,\n//       password: password,\n//     }),\n//   })\n//     .then(checkResponse)\n//     .then((data) => {\n//       if (data.token) {\n//         localStorage.setItem(\"jwt\", data.token)\n//         return data\n//       }\n//     })\n// }\n\n// export const checkToken = (jwt) => {\n//   return fetch(`${BASE_URL}/users/me`, {\n//     method: \"GET\",\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//       Authorization: `Bearer ${jwt}`,\n//     },\n//   }).then(checkResponse)\n// }"],"mappings":"AAAA,MAAMA,OAAO,CAAC;EACZC,WAAWA,CAACC,OAAO,EAAE;IACnB,IAAI,CAACC,QAAQ,GAAGD,OAAO;EACzB;EACA;EACAE,WAAWA,CAACC,GAAG,EAAE;IACf,IAAIA,GAAG,CAACC,EAAE,EAAE;MACV,OAAOD,GAAG,CAACE,IAAI,EAAE;IACnB;IACA,OAAOC,OAAO,CAACC,MAAM,CAAE,kBAAiBJ,GAAG,CAACK,MAAO,EAAC,CAAC;EACvD;EACA;EACAC,YAAYA,CAACC,KAAK,EAAEC,QAAQ,EAAE;IAC5B,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACX,QAAS,SAAQ,EAAE;MACtCY,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEP,KAAK;QAAEC;MAAS,CAAC;IAC1C,CAAC,CAAC,CAACO,IAAI,CAAEf,GAAG,IAAK,IAAI,CAACD,WAAW,CAACC,GAAG,CAAC,CAAC;EACzC;;EAEA;EACAgB,SAASA,CAACT,KAAK,EAAEC,QAAQ,EAAE;IACzB,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACX,QAAS,SAAQ,EAAE;MACtCY,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEP,KAAK;QAAEC;MAAS,CAAC;IAC1C,CAAC,CAAC,CAACO,IAAI,CAAEf,GAAG,IAAK,IAAI,CAACD,WAAW,CAACC,GAAG,CAAC,CAAC;EACzC;;EAEA;EACAiB,UAAUA,CAACC,KAAK,EAAE;IAChB,OAAOT,KAAK,CAAE,GAAE,IAAI,CAACX,QAAS,WAAU,EAAE;MACxCY,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCQ,aAAa,EAAG,UAASD,KAAM;MACjC;IACF,CAAC,CAAC,CAACH,IAAI,CAAEf,GAAG,IAAK,IAAI,CAACD,WAAW,CAACC,GAAG,CAAC,CAAC;EACzC;AACF;AACA,MAAMoB,OAAO,GAAG,IAAIzB,OAAO,CAAC,+BAA+B,CAAC;AAC5D,eAAeyB,OAAO;;AAItB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
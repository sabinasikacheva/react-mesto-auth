{"ast":null,"code":"const BASE_URL = 'https://auth.nomoreparties.co';\nconst headers = {\n  'Content-Type': 'application/json'\n};\nconst getJson = res => {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(`Ошибка: ${res.status}`);\n};\nconst request = (url, options) => {\n  return fetch(`${BASE_URL}${url}`, options).then(getJson);\n};\nexport const register = (password, email) => {\n  return request('/signup', {\n    method: 'POST',\n    headers: headers,\n    body: JSON.stringify({\n      password,\n      email\n    })\n  });\n};\nexport const login = (password, email) => {\n  return request('/signin', {\n    method: 'POST',\n    headers: headers,\n    body: JSON.stringify({\n      password,\n      email\n    })\n  });\n};\nexport const checkToken = token => {\n  return request('/users/me', {\n    method: 'GET',\n    headers: {\n      headers,\n      \"Authorization\": `Bearer ${token}`\n    }\n  });\n};","map":{"version":3,"names":["BASE_URL","headers","getJson","res","ok","json","Promise","reject","status","request","url","options","fetch","then","register","password","email","method","body","JSON","stringify","login","checkToken","token"],"sources":["/Users/sabina/react-mesto-auth/src/utils/AuthApi.js"],"sourcesContent":["const BASE_URL = 'https://auth.nomoreparties.co';\nconst headers = {\n  'Content-Type': 'application/json'\n}\n\n  const getJson = (res) =>  {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`)\n  }\n\n  const request = (url, options) => {\n    return fetch(`${BASE_URL}${url}`, options).then(getJson)\n  }\n\n  export const register = (password, email) => {\n    return request('/signup', {\n      method: 'POST',\n      headers: headers,\n      body: JSON.stringify({\n        password,\n        email\n      })\n    })\n  };\n\n  export const login = (password, email) => {\n    return request('/signin', {\n      method: 'POST',\n      headers: headers,\n      body: JSON.stringify({\n        password,\n        email\n      })\n    })\n  };\n\n  export const checkToken = (token) => {\n    return request('/users/me', {\n      method: 'GET',\n      headers: {\n        headers,\n        \"Authorization\" : `Bearer ${token}`\n      }\n    })\n  }"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,+BAA+B;AAChD,MAAMC,OAAO,GAAG;EACd,cAAc,EAAE;AAClB,CAAC;AAEC,MAAMC,OAAO,GAAIC,GAAG,IAAM;EACxB,IAAIA,GAAG,CAACC,EAAE,EAAE;IACV,OAAOD,GAAG,CAACE,IAAI,EAAE;EACnB;EACA,OAAOC,OAAO,CAACC,MAAM,CAAE,WAAUJ,GAAG,CAACK,MAAO,EAAC,CAAC;AAChD,CAAC;AAED,MAAMC,OAAO,GAAGA,CAACC,GAAG,EAAEC,OAAO,KAAK;EAChC,OAAOC,KAAK,CAAE,GAAEZ,QAAS,GAAEU,GAAI,EAAC,EAAEC,OAAO,CAAC,CAACE,IAAI,CAACX,OAAO,CAAC;AAC1D,CAAC;AAED,OAAO,MAAMY,QAAQ,GAAGA,CAACC,QAAQ,EAAEC,KAAK,KAAK;EAC3C,OAAOP,OAAO,CAAC,SAAS,EAAE;IACxBQ,MAAM,EAAE,MAAM;IACdhB,OAAO,EAAEA,OAAO;IAChBiB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBL,QAAQ;MACRC;IACF,CAAC;EACH,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMK,KAAK,GAAGA,CAACN,QAAQ,EAAEC,KAAK,KAAK;EACxC,OAAOP,OAAO,CAAC,SAAS,EAAE;IACxBQ,MAAM,EAAE,MAAM;IACdhB,OAAO,EAAEA,OAAO;IAChBiB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBL,QAAQ;MACRC;IACF,CAAC;EACH,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMM,UAAU,GAAIC,KAAK,IAAK;EACnC,OAAOd,OAAO,CAAC,WAAW,EAAE;IAC1BQ,MAAM,EAAE,KAAK;IACbhB,OAAO,EAAE;MACPA,OAAO;MACP,eAAe,EAAI,UAASsB,KAAM;IACpC;EACF,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
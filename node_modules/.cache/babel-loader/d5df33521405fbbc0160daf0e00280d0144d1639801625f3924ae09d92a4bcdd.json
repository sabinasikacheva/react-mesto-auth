{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/Sabina/react-mesto-auth/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Routes, Route, Navigate, useNavigate } from \"react-router-dom\";\nimport Header from \"./Header.js\";\nimport Main from \"./Main.js\";\nimport Footer from \"./Footer.js\";\nimport PopupWithForm from \"./PopupWithForm.js\";\nimport ImagePopup from \"./ImagePopup.js\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport api from \"../utils/Api.js\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext.js\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport Login from \"./Login.js\";\nimport Register from \"./Register.js\";\nimport InfoTooltip from \"./InfoTooltip.js\";\nimport * as authApi from \"../utils/AuthApi.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const navigate = useNavigate();\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n\n  // 12 спринт\n\n  const [loggedIn, setLoggedIn] = useState(false); // loggedIn будет содержать статус пользователя — вошёл он в систему или нет.\n  const [isSuccess, setIsSuccess] = useState(false); // статус регистрации(успешна или нет)\n  const [userEmail, setUserEmail] = useState('');\n  const [isInfoTooltip, setIsInfoTooltip] = useState(false);\n\n  //Получаем массив карточек и информацию о пользователе\n  useEffect(() => {\n    api.getCurrentUser().then(data => {\n      setCurrentUser(data);\n    }).catch(err => {\n      console.log(err);\n    });\n    api.getInitialCards().then(cards => {\n      setCards(cards);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  // Проверяем токен пользователя\n  useEffect(() => {\n    if (localStorage.getItem(\"token\")) {\n      const token = localStorage.getItem(\"token\");\n      authApi.checkToken(token).then(res => {\n        if (res) {\n          setLoggedIn(true);\n          navigate(\"/\", {\n            replace: true\n          });\n          setUserEmail(res.data.email);\n        }\n      }).catch(err => console.log(err));\n    }\n  }, []);\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(cards => cards.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      setCards(cards => cards.filter(c => c._id !== card._id));\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard(null);\n    setIsInfoTooltip(false);\n  }\n  function handleUpdateUser(item) {\n    api.setUserInfo(item).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n    // .finally(() => setIsLoading(false));\n    //   setIsLoading(true);\n  }\n\n  function handleUpdateAvatar(data) {\n    api.changeUserAvatar(data).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n    // .finally(() => setIsLoading(false));\n    //   setIsLoading(true);\n  }\n\n  function handleAddPlaceSubmit(item) {\n    api.createCard(item).then(res => {\n      setCards([res, ...cards]);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n    //.finally(() => setIsLoading(false));\n    //setIsLoading(true);\n  }\n\n  // обработчик регистрации пользователя\n  const handleRegistrationSubmit = _ref => {\n    let {\n      email,\n      password\n    } = _ref;\n    authApi.register(password, email).then(() => {\n      setIsSuccess(true);\n      setIsInfoTooltip(true);\n      navigate(\"/sign-in\", {\n        replace: true\n      });\n    }).catch(err => {\n      console.log(err);\n      setIsSuccess(false);\n      setIsInfoTooltip(true);\n    });\n  };\n\n  // обработчик авторизации пользователя\n  const handleLoginSubmit = _ref2 => {\n    let {\n      email,\n      password\n    } = _ref2;\n    authApi.authorize(password, email).then(res => {\n      localStorage.setItem(\"token\", res.token);\n      setUserEmail(email);\n      setLoggedIn(true);\n      navigate(\"/\", {\n        replace: true\n      });\n    }).catch(err => {\n      console.log(err);\n      setIsSuccess(false);\n      setIsInfoTooltip(true);\n    });\n  };\n\n  // выход\n  const signOut = () => {\n    localStorage.removeItem(\"token\");\n    setLoggedIn(false);\n    setUserEmail(null);\n    navigate(\"sign-in\", {\n      replace: true\n    });\n  };\n  // // закрытие по esc\n  // const isOpen =\n  // isEditAvatarPopupOpen ||\n  // isEditProfilePopupOpen ||\n  // isAddPlacePopupOpen ||\n  // isSuccessPopupOpen ||\n  // selectedCard;\n\n  // useEffect(() => {\n  // function closeByEscape(evt) {\n  //   if (evt.key === \"Escape\") {\n  //     closeAllPopups();\n  //   }\n  // }\n  // if (isOpen) {\n  //   // навешиваем только при открытии\n  //   document.addEventListener(\"keydown\", closeByEscape);\n  //   return () => {\n  //     document.removeEventListener(\"keydown\", closeByEscape);\n  //   };\n  // }\n  // }, [isOpen]);\n  // 12 спринт\n  // регистрация пользователя\n  // function handleRegisterUser(email, password) {\n  //   authApi\n  //     .registerUser(email, password)\n  //     .then((data) => {\n  //       if (data) {\n  //         setIsInfoTolltipSuccess(true); // успешный вход\n  //         navigate(\"/sing-in\"); // переюрасываем на вход\n  //       }\n  //     })\n  //     .catch((err) => {\n  //       setIsInfoTolltipSuccess(false); // fail\n  //       console.log(err);\n  //     })\n  //     .finally(() => setIsSuccessPopupOpen(true)); // в любом случае открываем попап\n  // }\n\n  // // аутентификация пользователя\n  // function handleAuthUser(email, password) {\n  //   authApi\n  //     .loginUser(email, password)\n  //     .then((data) => {\n  //       if (data.token) {\n  //         setHeaderEmail(email); // передаем почту\n  //         setIsLoggedIn(true); // войдено\n  //         localStorage.setItem(\"jwt\", data.token);\n  //         navigate(\"/\"); // перебрасываем в профиль\n  //       }\n  //     })\n  //     .catch((err) => {\n  //       setIsInfoTolltipSuccess(false); // fail\n  //       setIsSuccessPopupOpen(true); // в любом случае открываем попап\n  //       console.log(err);\n  //     });\n  // }\n  // // проверяем токен\n  // React.useEffect(() => {\n  //   const jwt = localStorage.getItem(\"jwt\");\n  //   if (jwt) {\n  //     authApi\n  //       .checkToken(jwt)\n  //       .then((data) => {\n  //         if (data) {\n  //           setIsLoggedIn(true); // войдено\n  //           setHeaderEmail(data.data.email); // получаем почту\n  //           navigate(\"/\"); // перебрасываем в профиль\n  //         }\n  //       })\n  //       .catch((err) => console.log(err));\n  //   }\n  // }, [navigate]);\n  // // удаляем токен\n  // function handleSingOut() {\n  //   localStorage.removeItem(\"jwt\");\n  //   setHeaderEmail(\"\"); // очищаем почту\n  //   setIsLoggedIn(false); // не войдено\n  //   navigate(\"/sign-in\"); // перебрасываем на вход\n  // }\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Header, {\n          userEmail: userEmail,\n          loggedIn: loggedIn,\n          onOut: signOut\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 7\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route\n        //exact\n        , {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            element: Main,\n            onEditProfile: handleEditProfileClick,\n            onAddPlace: handleAddPlaceClick,\n            onEditAvatar: handleEditAvatarClick,\n            onCardClick: handleCardClick,\n            cards: cards,\n            onCardLike: handleCardLike,\n            onCardDelete: handleCardDelete,\n            loggedIn: loggedIn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-in\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            onLogin: handleLoginSubmit,\n            loggedIn: loggedIn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-up\",\n          element: /*#__PURE__*/_jsxDEV(Register, {\n            onRegistration: handleRegistrationSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: loggedIn ? \"/\" : \"/sign-in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n        //isLoading={isLoading}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit\n        //isLoading={isLoading}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n        //isLoading={isLoading} \n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm\n      //isOpen={isDeletePopupOpen}\n      , {\n        name: \"delete\",\n        title: \"Вы уверены?\",\n        buttonText: \"Да\",\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n        //isOpen={selectedCard}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n        name: \"registration\",\n        textSuccess: \"\\u0412\\u044B \\u0443\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E \\u0437\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u043B\\u0438\\u0441\\u044C!\",\n        textFail: \"\\u0427\\u0442\\u043E-\\u0442\\u043E \\u043F\\u043E\\u0448\\u043B\\u043E \\u043D\\u0435 \\u0442\\u0430\\u043A! \\u041F\\u043E\\u043F\\u0440\\u043E\\u0431\\u0443\\u0439\\u0442\\u0435 \\u0435\\u0449\\u0451 \\u0440\\u0430\\u0437.\",\n        isOpen: isInfoTooltip,\n        onClose: closeAllPopups,\n        isSuccess: isSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 279,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"Zlimv2x1xXx33t1g5u89UVm/QF0=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Routes","Route","Navigate","useNavigate","Header","Main","Footer","PopupWithForm","ImagePopup","EditProfilePopup","EditAvatarPopup","AddPlacePopup","api","CurrentUserContext","ProtectedRoute","Login","Register","InfoTooltip","authApi","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","navigate","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","loggedIn","setLoggedIn","isSuccess","setIsSuccess","userEmail","setUserEmail","isInfoTooltip","setIsInfoTooltip","getCurrentUser","then","data","catch","err","console","log","getInitialCards","localStorage","getItem","token","checkToken","res","replace","email","handleEditProfileClick","handleAddPlaceClick","handleEditAvatarClick","handleCardClick","card","handleCardLike","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","map","c","handleCardDelete","deleteCard","filter","closeAllPopups","handleUpdateUser","item","setUserInfo","handleUpdateAvatar","changeUserAvatar","handleAddPlaceSubmit","createCard","handleRegistrationSubmit","_ref","password","register","handleLoginSubmit","_ref2","authorize","setItem","signOut","removeItem","Provider","value","children","className","onOut","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onEditProfile","onAddPlace","onEditAvatar","onCardClick","onCardLike","onCardDelete","onLogin","onRegistration","to","isOpen","onClose","onUpdateUser","onUpdateAvatar","name","title","buttonText","textSuccess","textFail","_c","$RefreshReg$"],"sources":["/Users/admin/Documents/Sabina/react-mesto-auth/src/components/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Routes, Route, Navigate, useNavigate } from \"react-router-dom\";\nimport Header from \"./Header.js\";\nimport Main from \"./Main.js\";\nimport Footer from \"./Footer.js\";\nimport PopupWithForm from \"./PopupWithForm.js\";\nimport ImagePopup from \"./ImagePopup.js\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport api from \"../utils/Api.js\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext.js\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport Login from \"./Login.js\";\nimport Register from \"./Register.js\";\nimport InfoTooltip from \"./InfoTooltip.js\";\nimport * as authApi from \"../utils/AuthApi.js\";\n\nfunction App() {\n  const navigate = useNavigate();\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n\n  // 12 спринт\n\n  const [loggedIn, setLoggedIn] = useState(false); // loggedIn будет содержать статус пользователя — вошёл он в систему или нет.\n  const [isSuccess, setIsSuccess] = useState(false); // статус регистрации(успешна или нет)\n  const [userEmail, setUserEmail] = useState('');\n  const [isInfoTooltip, setIsInfoTooltip] = useState(false);\n\n  //Получаем массив карточек и информацию о пользователе\n  useEffect(() => {\n    api\n      .getCurrentUser()\n      .then((data) => {\n        setCurrentUser(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    api  \n      .getInitialCards()\n      .then((cards) => {\n        setCards(cards);\n       })\n      .catch((err) => {\n         console.log(err);\n     });\n  }, []);\n\n  // Проверяем токен пользователя\n  useEffect(() => {\n    if (localStorage.getItem(\"token\")) {\n      const token = localStorage.getItem(\"token\");\n\n      authApi\n        .checkToken(token)\n        .then((res) => {\n          if (res) {\n            setLoggedIn(true);\n            navigate(\"/\", { replace: true });\n            setUserEmail(res.data.email);\n          }\n        })\n        .catch((err) => console.log(err));\n    }\n  }, []);\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    \n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api\n      .changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        setCards((cards) => \n          cards.map((c) => c._id === card._id ? newCard : c));\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n  }\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      setCards((cards) => cards.filter((c) => c._id !== card._id));\n    })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard(null);\n    setIsInfoTooltip(false);\n  }\n\n  function handleUpdateUser(item) {\n    api\n      .setUserInfo(item)\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err));\n      // .finally(() => setIsLoading(false));\n      //   setIsLoading(true);\n  }\n\n  function handleUpdateAvatar(data) {\n    api\n      .changeUserAvatar(data)\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err));\n      // .finally(() => setIsLoading(false));\n      //   setIsLoading(true);\n  }\n\n  function handleAddPlaceSubmit(item) {\n    api\n      .createCard(item)\n      .then((res) => {\n        setCards([res, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err));\n      //.finally(() => setIsLoading(false));\n        //setIsLoading(true);\n  }\n\n   // обработчик регистрации пользователя\n   const handleRegistrationSubmit = ({ email, password }) => {\n    authApi\n      .register(password, email)\n      .then(() => {\n        setIsSuccess(true);\n        setIsInfoTooltip(true);\n        navigate(\"/sign-in\", { replace: true });\n      })\n      .catch((err) => {\n        console.log(err);\n        setIsSuccess(false);\n        setIsInfoTooltip(true);\n      });\n  };\n\n  // обработчик авторизации пользователя\n  const handleLoginSubmit = ({ email, password }) => {\n    authApi\n      .authorize(password, email)\n      .then((res) => {\n        localStorage.setItem(\"token\", res.token);\n        setUserEmail(email);\n        setLoggedIn(true);\n        navigate(\"/\", { replace: true });\n      })\n      .catch((err) => {\n        console.log(err);\n        setIsSuccess(false);\n        setIsInfoTooltip(true);\n      });\n  };\n\n  // выход\n  const signOut = () => {\n    localStorage.removeItem(\"token\");\n    setLoggedIn(false);\n    setUserEmail(null);\n    navigate(\"sign-in\", { replace: true });\n  };\n// // закрытие по esc\n// const isOpen =\n// isEditAvatarPopupOpen ||\n// isEditProfilePopupOpen ||\n// isAddPlacePopupOpen ||\n// isSuccessPopupOpen ||\n// selectedCard;\n\n// useEffect(() => {\n// function closeByEscape(evt) {\n//   if (evt.key === \"Escape\") {\n//     closeAllPopups();\n//   }\n// }\n// if (isOpen) {\n//   // навешиваем только при открытии\n//   document.addEventListener(\"keydown\", closeByEscape);\n//   return () => {\n//     document.removeEventListener(\"keydown\", closeByEscape);\n//   };\n// }\n// }, [isOpen]);\n   // 12 спринт\n  // регистрация пользователя\n  // function handleRegisterUser(email, password) {\n  //   authApi\n  //     .registerUser(email, password)\n  //     .then((data) => {\n  //       if (data) {\n  //         setIsInfoTolltipSuccess(true); // успешный вход\n  //         navigate(\"/sing-in\"); // переюрасываем на вход\n  //       }\n  //     })\n  //     .catch((err) => {\n  //       setIsInfoTolltipSuccess(false); // fail\n  //       console.log(err);\n  //     })\n  //     .finally(() => setIsSuccessPopupOpen(true)); // в любом случае открываем попап\n  // }\n\n  // // аутентификация пользователя\n  // function handleAuthUser(email, password) {\n  //   authApi\n  //     .loginUser(email, password)\n  //     .then((data) => {\n  //       if (data.token) {\n  //         setHeaderEmail(email); // передаем почту\n  //         setIsLoggedIn(true); // войдено\n  //         localStorage.setItem(\"jwt\", data.token);\n  //         navigate(\"/\"); // перебрасываем в профиль\n  //       }\n  //     })\n  //     .catch((err) => {\n  //       setIsInfoTolltipSuccess(false); // fail\n  //       setIsSuccessPopupOpen(true); // в любом случае открываем попап\n  //       console.log(err);\n  //     });\n  // }\n  // // проверяем токен\n  // React.useEffect(() => {\n  //   const jwt = localStorage.getItem(\"jwt\");\n  //   if (jwt) {\n  //     authApi\n  //       .checkToken(jwt)\n  //       .then((data) => {\n  //         if (data) {\n  //           setIsLoggedIn(true); // войдено\n  //           setHeaderEmail(data.data.email); // получаем почту\n  //           navigate(\"/\"); // перебрасываем в профиль\n  //         }\n  //       })\n  //       .catch((err) => console.log(err));\n  //   }\n  // }, [navigate]);\n  // // удаляем токен\n  // function handleSingOut() {\n  //   localStorage.removeItem(\"jwt\");\n  //   setHeaderEmail(\"\"); // очищаем почту\n  //   setIsLoggedIn(false); // не войдено\n  //   navigate(\"/sign-in\"); // перебрасываем на вход\n  // }\n  return (\n  <CurrentUserContext.Provider value={currentUser}>\n    <div className=\"body\">\n      <>\n      <Header userEmail={userEmail} loggedIn={loggedIn} onOut={signOut} />\n      </>\n      <Routes>\n        <Route\n        //exact\n          path=\"/\"\n          element={\n            <ProtectedRoute\n              element={Main}\n              onEditProfile={handleEditProfileClick}\n              onAddPlace={handleAddPlaceClick}\n              onEditAvatar={handleEditAvatarClick}\n              onCardClick={handleCardClick}\n              cards={cards}\n              onCardLike={handleCardLike}\n              onCardDelete={handleCardDelete}\n              loggedIn={loggedIn}\n            />\n          }\n      />\n        <Route\n          path=\"/sign-in\"\n          element={<Login onLogin={handleLoginSubmit} loggedIn={loggedIn} />}\n        />\n\n        <Route\n          path=\"/sign-up\"\n          element={<Register onRegistration={handleRegistrationSubmit} />}\n        />\n        <Route\n          path=\"*\"\n          element={<Navigate to={loggedIn ? \"/\" : \"/sign-in\"} />}\n        />\n      </Routes>\n      <Footer />\n      <EditProfilePopup \n        isOpen={isEditProfilePopupOpen} \n        onClose={closeAllPopups}\n        onUpdateUser={handleUpdateUser} \n        //isLoading={isLoading}\n        />\n      <AddPlacePopup\n        isOpen={isAddPlacePopupOpen}\n        onClose={closeAllPopups}\n        onAddPlace={handleAddPlaceSubmit}\n        //isLoading={isLoading}\n         />\n      <EditAvatarPopup\n        isOpen={isEditAvatarPopupOpen}\n        onClose={closeAllPopups}\n        onUpdateAvatar={handleUpdateAvatar}\n        //isLoading={isLoading} \n        />\n      <PopupWithForm\n        //isOpen={isDeletePopupOpen}\n        name={\"delete\"}\n        title={\"Вы уверены?\"}\n        buttonText={\"Да\"}\n        onClose={closeAllPopups}\n      ></PopupWithForm>\n      <ImagePopup\n        card={selectedCard}\n        onClose={closeAllPopups}\n        //isOpen={selectedCard}\n      />\n      <InfoTooltip\n        name=\"registration\"\n        textSuccess=\"Вы успешно зарегистрировались!\"\n        textFail=\"Что-то пошло не так! Попробуйте ещё раз.\"\n        isOpen={isInfoTooltip}\n        onClose={closeAllPopups}\n        isSuccess={isSuccess}\n      />\n    </div>\n  </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
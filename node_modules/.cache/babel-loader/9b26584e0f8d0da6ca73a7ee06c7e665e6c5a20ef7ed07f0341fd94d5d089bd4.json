{"ast":null,"code":"class Api {\n  constructor(basePath, token) {\n    this._basePath = basePath;\n    this._token = token;\n  }\n  _getHeaders() {\n    return {\n      \"Content-Type\": \"application/json\",\n      authorization: this._token\n    };\n  }\n  _getJson(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n  getInitialCards() {\n    return fetch(`${this._basePath}/cards`, {\n      headers: this._getHeaders()\n    }).then(this._getJson);\n  }\n  createCard(item) {\n    return fetch(`${this._basePath}/cards`, {\n      method: \"POST\",\n      headers: this._getHeaders(),\n      body: JSON.stringify(item)\n    }).then(this._getJson);\n  }\n  deleteCard(id) {\n    return fetch(`${this._basePath}/cards/${id}`, {\n      method: \"DELETE\",\n      headers: this._getHeaders()\n    }).then(this._getJson);\n  }\n  setLike(id) {\n    return fetch(`${this._basePath}/cards/${id}/likes`, {\n      method: 'PUT',\n      headers: this._getHeaders()\n    }).then(this._getJson);\n  }\n  deleteLike(id) {\n    return fetch(`${this._basePath}/cards/${id}/likes`, {\n      method: 'DELETE',\n      headers: this._getHeaders()\n    }).then(this._getJson);\n  }\n  changeLikeCardStatus(id, isLiked) {\n    if (isLiked) {\n      return this.setLike(id);\n    } else {\n      return this.deleteLike(id);\n    }\n  }\n  getCurrentUser() {\n    return fetch(`${this._basePath}/users/me`, {\n      headers: this._getHeaders()\n    }).then(this._getJson);\n  }\n  setUserInfo(item) {\n    return fetch(`${this._basePath}/users/me`, {\n      method: \"PATCH\",\n      headers: this._getHeaders(),\n      body: JSON.stringify({\n        name: item.name,\n        about: item.about\n      })\n    }).then(this._getJson);\n  }\n  changeUserAvatar(data) {\n    return fetch(`${this._basePath}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._getHeaders(),\n      body: JSON.stringify(data)\n    }).then(this._getJson);\n  }\n}\nconst api = new Api('https://mesto.nomoreparties.co/v1/cohort-61', 'fc848517-94b6-406d-9164-cc065e2b75b4');\nexport default api;","map":{"version":3,"names":["Api","constructor","basePath","token","_basePath","_token","_getHeaders","authorization","_getJson","res","ok","json","Promise","reject","status","getInitialCards","fetch","headers","then","createCard","item","method","body","JSON","stringify","deleteCard","id","setLike","deleteLike","changeLikeCardStatus","isLiked","getCurrentUser","setUserInfo","name","about","changeUserAvatar","data","api"],"sources":["/Users/admin/Documents/Sabina/mesto-react/src/utils/Api.js"],"sourcesContent":["class Api {\n    constructor(basePath, token) {\n        this._basePath = basePath;\n        this._token = token;\n    }\n\n    _getHeaders() {\n        return {\n            \"Content-Type\": \"application/json\",\n            authorization: this._token,\n        };\n    }\n\n    _getJson(res) {\n        if (res.ok) {\n            return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n    }\n\n    getInitialCards() {\n        return fetch(`${this._basePath}/cards`, {\n            headers: this._getHeaders(),\n        })\n          .then(this._getJson);\n    }\n\n    createCard(item) {\n        return fetch(`${this._basePath}/cards`, {\n            method: \"POST\",\n            headers: this._getHeaders(),\n            body: JSON.stringify(item),\n        })\n          .then(this._getJson);\n    }\n\n    deleteCard(id) {\n        return fetch(`${this._basePath}/cards/${id}`, {\n            method: \"DELETE\",\n            headers: this._getHeaders(),\n        })\n          .then(this._getJson);\n    }\n\n    setLike(id) {\n        return fetch(`${this._basePath}/cards/${id}/likes`, {\n            method: 'PUT',\n            headers: this._getHeaders(),\n        })\n          .then(this._getJson);\n    }\n\n    deleteLike(id) {\n        return fetch(`${this._basePath}/cards/${id}/likes`, {\n            method: 'DELETE',\n            headers: this._getHeaders(),\n        })\n          .then(this._getJson);\n    }\n\n    changeLikeCardStatus(id, isLiked) {\n        if (isLiked) {\n          return this.setLike(id);\n        } else {\n          return this.deleteLike(id);\n        }\n      }\n\n    getCurrentUser() {\n        return fetch(`${this._basePath}/users/me`, {\n            headers: this._getHeaders(),\n        })\n          .then(this._getJson);\n    }\n\n    setUserInfo(item) {\n        return fetch(`${this._basePath}/users/me`, {\n            method: \"PATCH\",\n            headers: this._getHeaders(),\n            body: JSON.stringify({\n                name: item.name,\n                about: item.about\n            })\n        })\n          .then(this._getJson);\n    }\n\n    changeUserAvatar(data) {\n        return fetch(`${this._basePath}/users/me/avatar`, {\n            method: \"PATCH\",\n            headers: this._getHeaders(),\n            body: JSON.stringify(data),\n        })\n          .then(this._getJson);\n    }\n}\n\nconst api = new Api(\n    'https://mesto.nomoreparties.co/v1/cohort-61',\n    'fc848517-94b6-406d-9164-cc065e2b75b4'); \n\nexport default api;    \n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}